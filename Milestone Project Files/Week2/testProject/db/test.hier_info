|test
CLOCK_50 => CLOCK_50.IN5
KEY[0] => KEY[0].IN5
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
PS2_CLK <> PS2_Controller:PS2.PS2_CLK
PS2_DAT <> PS2_Controller:PS2.PS2_DAT
HEX0 <= <GND>
HEX1 <= <GND>
HEX2 <= <GND>
HEX3 <= <GND>
HEX4 <= <GND>
HEX5 <= <GND>
LEDR <= <GND>


|test|PS2_Controller:PS2
CLOCK_50 => CLOCK_50.IN2
reset => reset.IN2
the_command[0] => the_command_w[0].IN1
the_command[1] => the_command_w[1].IN1
the_command[2] => the_command_w[2].IN1
the_command[3] => the_command_w[3].IN1
the_command[4] => the_command_w[4].IN1
the_command[5] => the_command_w[5].IN1
the_command[6] => the_command_w[6].IN1
the_command[7] => the_command_w[7].IN1
send_command => send_command_w.IN1
PS2_CLK <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_CLK
PS2_DAT <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_DAT
command_was_sent <= Altera_UP_PS2_Command_Out:PS2_Command_Out.command_was_sent
error_communication_timed_out <= Altera_UP_PS2_Command_Out:PS2_Command_Out.error_communication_timed_out
received_data[0] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[1] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[2] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[3] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[4] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[5] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[6] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[7] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data_en <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data_en


|test|PS2_Controller:PS2|Altera_UP_PS2_Data_In:PS2_Data_In
clk => received_data_en~reg0.CLK
clk => received_data[0]~reg0.CLK
clk => received_data[1]~reg0.CLK
clk => received_data[2]~reg0.CLK
clk => received_data[3]~reg0.CLK
clk => received_data[4]~reg0.CLK
clk => received_data[5]~reg0.CLK
clk => received_data[6]~reg0.CLK
clk => received_data[7]~reg0.CLK
clk => data_shift_reg[0].CLK
clk => data_shift_reg[1].CLK
clk => data_shift_reg[2].CLK
clk => data_shift_reg[3].CLK
clk => data_shift_reg[4].CLK
clk => data_shift_reg[5].CLK
clk => data_shift_reg[6].CLK
clk => data_shift_reg[7].CLK
clk => data_count[0].CLK
clk => data_count[1].CLK
clk => data_count[2].CLK
clk => data_count[3].CLK
clk => s_ps2_receiver~1.DATAIN
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data_en.OUTPUTSELECT
wait_for_incoming_data => always1.IN1
wait_for_incoming_data => ns_ps2_receiver.DATAA
wait_for_incoming_data => ns_ps2_receiver.DATAA
start_receiving_data => always1.IN1
ps2_clk_posedge => always1.IN0
ps2_clk_posedge => always1.IN1
ps2_clk_posedge => always2.IN0
ps2_clk_posedge => always5.IN0
ps2_clk_posedge => Selector4.IN3
ps2_clk_posedge => Selector0.IN4
ps2_clk_posedge => Selector4.IN1
ps2_clk_posedge => Selector3.IN2
ps2_clk_negedge => ~NO_FANOUT~
ps2_data => data_shift_reg.DATAB
ps2_data => always1.IN1
received_data[0] <= received_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[1] <= received_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[2] <= received_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[3] <= received_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[4] <= received_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[5] <= received_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[6] <= received_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[7] <= received_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data_en <= received_data_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|PS2_Controller:PS2|Altera_UP_PS2_Command_Out:PS2_Command_Out
clk => error_communication_timed_out~reg0.CLK
clk => command_was_sent~reg0.CLK
clk => cur_bit[0].CLK
clk => cur_bit[1].CLK
clk => cur_bit[2].CLK
clk => cur_bit[3].CLK
clk => transfer_counter[1].CLK
clk => transfer_counter[2].CLK
clk => transfer_counter[3].CLK
clk => transfer_counter[4].CLK
clk => transfer_counter[5].CLK
clk => transfer_counter[6].CLK
clk => transfer_counter[7].CLK
clk => transfer_counter[8].CLK
clk => transfer_counter[9].CLK
clk => transfer_counter[10].CLK
clk => transfer_counter[11].CLK
clk => transfer_counter[12].CLK
clk => transfer_counter[13].CLK
clk => transfer_counter[14].CLK
clk => transfer_counter[15].CLK
clk => transfer_counter[16].CLK
clk => transfer_counter[17].CLK
clk => waiting_counter[1].CLK
clk => waiting_counter[2].CLK
clk => waiting_counter[3].CLK
clk => waiting_counter[4].CLK
clk => waiting_counter[5].CLK
clk => waiting_counter[6].CLK
clk => waiting_counter[7].CLK
clk => waiting_counter[8].CLK
clk => waiting_counter[9].CLK
clk => waiting_counter[10].CLK
clk => waiting_counter[11].CLK
clk => waiting_counter[12].CLK
clk => waiting_counter[13].CLK
clk => waiting_counter[14].CLK
clk => waiting_counter[15].CLK
clk => waiting_counter[16].CLK
clk => waiting_counter[17].CLK
clk => waiting_counter[18].CLK
clk => waiting_counter[19].CLK
clk => waiting_counter[20].CLK
clk => command_initiate_counter[1].CLK
clk => command_initiate_counter[2].CLK
clk => command_initiate_counter[3].CLK
clk => command_initiate_counter[4].CLK
clk => command_initiate_counter[5].CLK
clk => command_initiate_counter[6].CLK
clk => command_initiate_counter[7].CLK
clk => command_initiate_counter[8].CLK
clk => command_initiate_counter[9].CLK
clk => command_initiate_counter[10].CLK
clk => command_initiate_counter[11].CLK
clk => command_initiate_counter[12].CLK
clk => command_initiate_counter[13].CLK
clk => ps2_command[0].CLK
clk => ps2_command[1].CLK
clk => ps2_command[2].CLK
clk => ps2_command[3].CLK
clk => ps2_command[4].CLK
clk => ps2_command[5].CLK
clk => ps2_command[6].CLK
clk => ps2_command[7].CLK
clk => ps2_command[8].CLK
clk => s_ps2_transmitter~1.DATAIN
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => command_was_sent.OUTPUTSELECT
reset => error_communication_timed_out.OUTPUTSELECT
the_command[0] => WideXor0.IN0
the_command[0] => ps2_command.DATAB
the_command[1] => WideXor0.IN1
the_command[1] => ps2_command.DATAB
the_command[2] => WideXor0.IN2
the_command[2] => ps2_command.DATAB
the_command[3] => WideXor0.IN3
the_command[3] => ps2_command.DATAB
the_command[4] => WideXor0.IN4
the_command[4] => ps2_command.DATAB
the_command[5] => WideXor0.IN5
the_command[5] => ps2_command.DATAB
the_command[6] => WideXor0.IN6
the_command[6] => ps2_command.DATAB
the_command[7] => WideXor0.IN7
the_command[7] => ps2_command.DATAB
send_command => Selector1.IN3
send_command => Selector6.IN2
send_command => Selector7.IN6
send_command => command_was_sent.OUTPUTSELECT
send_command => error_communication_timed_out.OUTPUTSELECT
send_command => Selector0.IN1
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => Selector6.IN3
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always1.IN1
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always6.IN0
ps2_clk_negedge => Selector3.IN3
ps2_clk_negedge => Selector5.IN3
PS2_CLK <> PS2_CLK
PS2_DAT <> PS2_DAT
command_was_sent <= command_was_sent~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_communication_timed_out <= error_communication_timed_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|positionControl:POSCTRL
clock => currentState~1.DATAIN
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
received_data_en => Selector1.IN2
received_data_en => Selector0.IN1
received_data_en => Selector2.IN1
received_data[0] => Decoder0.IN7
received_data[1] => Decoder0.IN6
received_data[2] => Decoder0.IN5
received_data[3] => Decoder0.IN4
received_data[4] => Decoder0.IN3
received_data[5] => Decoder0.IN2
received_data[6] => Decoder0.IN1
received_data[7] => Decoder0.IN0
doneCheckLegal => nextState.MODIFICATIONS.DATAB
doneCheckLegal => Selector2.IN2
isLegal => Selector3.IN3
isLegal => Selector4.IN1
moveUp <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
moveDown <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
moveLeft <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
moveRight <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
doneChangePosition <= doneChangePosition.DB_MAX_OUTPUT_PORT_TYPE


|test|positionDatapath:POSDATA
clock => newY[0]~reg0.CLK
clock => newY[1]~reg0.CLK
clock => newY[2]~reg0.CLK
clock => newY[3]~reg0.CLK
clock => newY[4]~reg0.CLK
clock => newX[0]~reg0.CLK
clock => newX[1]~reg0.CLK
clock => newX[2]~reg0.CLK
clock => newX[3]~reg0.CLK
clock => newX[4]~reg0.CLK
clock => changedY[0]~reg0.CLK
clock => changedY[1]~reg0.CLK
clock => changedY[2]~reg0.CLK
clock => changedY[3]~reg0.CLK
clock => changedY[4]~reg0.CLK
clock => changedX[0]~reg0.CLK
clock => changedX[1]~reg0.CLK
clock => changedX[2]~reg0.CLK
clock => changedX[3]~reg0.CLK
clock => changedX[4]~reg0.CLK
clock => tempCurrentY[0]~reg0.CLK
clock => tempCurrentY[1]~reg0.CLK
clock => tempCurrentY[2]~reg0.CLK
clock => tempCurrentY[3]~reg0.CLK
clock => tempCurrentY[4]~reg0.CLK
clock => tempCurrentX[0]~reg0.CLK
clock => tempCurrentX[1]~reg0.CLK
clock => tempCurrentX[2]~reg0.CLK
clock => tempCurrentX[3]~reg0.CLK
clock => tempCurrentX[4]~reg0.CLK
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => changedX.OUTPUTSELECT
resetn => changedX.OUTPUTSELECT
resetn => changedX.OUTPUTSELECT
resetn => changedX.OUTPUTSELECT
resetn => changedX.OUTPUTSELECT
resetn => changedY.OUTPUTSELECT
resetn => changedY.OUTPUTSELECT
resetn => changedY.OUTPUTSELECT
resetn => changedY.OUTPUTSELECT
resetn => changedY.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
currentX[0] => tempCurrentX.DATAB
currentX[1] => tempCurrentX.DATAB
currentX[2] => tempCurrentX.DATAB
currentX[3] => tempCurrentX.DATAB
currentX[4] => tempCurrentX.DATAB
currentY[0] => tempCurrentY.DATAB
currentY[1] => tempCurrentY.DATAB
currentY[2] => tempCurrentY.DATAB
currentY[3] => tempCurrentY.DATAB
currentY[4] => tempCurrentY.DATAB
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
doneLegal => always2.IN0
doneLegal => always2.IN0
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
gameOver => always2.IN1
gameOver => always2.IN1
tempCurrentX[0] <= tempCurrentX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[1] <= tempCurrentX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[2] <= tempCurrentX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[3] <= tempCurrentX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[4] <= tempCurrentX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[0] <= tempCurrentY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[1] <= tempCurrentY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[2] <= tempCurrentY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[3] <= tempCurrentY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[4] <= tempCurrentY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[0] <= changedX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[1] <= changedX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[2] <= changedX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[3] <= changedX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[4] <= changedX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[0] <= changedY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[1] <= changedY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[2] <= changedY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[3] <= changedY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[4] <= changedY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[0] <= newX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[1] <= newX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[2] <= newX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[3] <= newX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[4] <= newX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[0] <= newY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[1] <= newY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[2] <= newY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[3] <= newY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[4] <= newY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|delay2ClockCycles:DELAY
clock => out[0]~reg0.CLK
clock => out[1]~reg0.CLK
resetn => out.OUTPUTSELECT
resetn => out.OUTPUTSELECT
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|legalControl:LEGALCTRL
clock => gameOver~reg0.CLK
clock => isLegal~reg0.CLK
clock => doneCheckLegal~reg0.CLK
clock => currentState~1.DATAIN
resetn => Selector0.IN4
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => Selector1.IN1
doneChangePosition => nextState.CHECK_MEMORY.DATAB
doneChangePosition => Selector0.IN2
memory[0] => Mux0.IN15
memory[1] => Mux0.IN14
memory[2] => Mux0.IN13
memory[3] => Mux0.IN12
memory[4] => Mux0.IN11
memory[5] => Mux0.IN10
memory[6] => Mux0.IN9
memory[7] => Mux0.IN8
memory[8] => Mux0.IN7
memory[9] => Mux0.IN6
x[0] => Mux0.IN19
x[0] => Equal0.IN4
x[0] => Equal1.IN3
x[1] => Mux0.IN18
x[1] => Equal0.IN3
x[1] => Equal1.IN2
x[2] => Mux0.IN17
x[2] => Equal0.IN2
x[2] => Equal1.IN1
x[3] => Mux0.IN16
x[3] => Equal0.IN1
x[3] => Equal1.IN4
x[4] => Equal0.IN0
x[4] => Equal1.IN0
y[0] => Equal2.IN4
y[0] => Equal3.IN3
y[1] => Equal2.IN3
y[1] => Equal3.IN2
y[2] => Equal2.IN2
y[2] => Equal3.IN1
y[3] => Equal2.IN1
y[3] => Equal3.IN4
y[4] => Equal2.IN0
y[4] => Equal3.IN0
moveLeft => always0.IN1
moveRight => always0.IN1
moveUp => always0.IN1
moveDown => always0.IN1
doneCheckLegal <= doneCheckLegal~reg0.DB_MAX_OUTPUT_PORT_TYPE
isLegal <= isLegal~reg0.DB_MAX_OUTPUT_PORT_TYPE
gameOver <= gameOver~reg0.DB_MAX_OUTPUT_PORT_TYPE


