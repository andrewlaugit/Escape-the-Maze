|handshake
clock => clock.IN7
resetn => resetn.IN7
ps2_key_pressed => ps2_key_pressed.IN2
ps2_key_data[0] => ps2_key_data[0].IN1
ps2_key_data[1] => ps2_key_data[1].IN1
ps2_key_data[2] => ps2_key_data[2].IN1
ps2_key_data[3] => ps2_key_data[3].IN1
ps2_key_data[4] => ps2_key_data[4].IN1
ps2_key_data[5] => ps2_key_data[5].IN1
ps2_key_data[6] => ps2_key_data[6].IN1
ps2_key_data[7] => ps2_key_data[7].IN1
valueInMemory[0] => valueInMemory[0].IN1
valueInMemory[1] => valueInMemory[1].IN1
valueInMemory[2] => valueInMemory[2].IN1
doneMaze => doneMaze.IN1
doneDraw => doneDraw.IN1
doneErase => doneErase.IN1
drawX[0] <= positionDatapath:POSDATA.newX
drawX[1] <= positionDatapath:POSDATA.newX
drawX[2] <= positionDatapath:POSDATA.newX
drawX[3] <= positionDatapath:POSDATA.newX
drawX[4] <= positionDatapath:POSDATA.newX
drawY[0] <= positionDatapath:POSDATA.newY
drawY[1] <= positionDatapath:POSDATA.newY
drawY[2] <= positionDatapath:POSDATA.newY
drawY[3] <= positionDatapath:POSDATA.newY
drawY[4] <= positionDatapath:POSDATA.newY
prevX[0] <= positionDatapath:POSDATA.prevX
prevX[1] <= positionDatapath:POSDATA.prevX
prevX[2] <= positionDatapath:POSDATA.prevX
prevX[3] <= positionDatapath:POSDATA.prevX
prevX[4] <= positionDatapath:POSDATA.prevX
prevY[0] <= positionDatapath:POSDATA.prevY
prevY[1] <= positionDatapath:POSDATA.prevY
prevY[2] <= positionDatapath:POSDATA.prevY
prevY[3] <= positionDatapath:POSDATA.prevY
prevY[4] <= positionDatapath:POSDATA.prevY
changedX[0] <= changedX[0].DB_MAX_OUTPUT_PORT_TYPE
changedX[1] <= changedX[1].DB_MAX_OUTPUT_PORT_TYPE
changedX[2] <= changedX[2].DB_MAX_OUTPUT_PORT_TYPE
changedX[3] <= changedX[3].DB_MAX_OUTPUT_PORT_TYPE
changedX[4] <= changedX[4].DB_MAX_OUTPUT_PORT_TYPE
changedY[0] <= changedY[0].DB_MAX_OUTPUT_PORT_TYPE
changedY[1] <= changedY[1].DB_MAX_OUTPUT_PORT_TYPE
changedY[2] <= changedY[2].DB_MAX_OUTPUT_PORT_TYPE
changedY[3] <= changedY[3].DB_MAX_OUTPUT_PORT_TYPE
changedY[4] <= changedY[4].DB_MAX_OUTPUT_PORT_TYPE
score[0] <= numberOfMoves[0].DB_MAX_OUTPUT_PORT_TYPE
score[1] <= numberOfMoves[1].DB_MAX_OUTPUT_PORT_TYPE
score[2] <= numberOfMoves[2].DB_MAX_OUTPUT_PORT_TYPE
score[3] <= numberOfMoves[3].DB_MAX_OUTPUT_PORT_TYPE
score[4] <= numberOfMoves[4].DB_MAX_OUTPUT_PORT_TYPE
score[5] <= numberOfMoves[5].DB_MAX_OUTPUT_PORT_TYPE
score[6] <= numberOfMoves[6].DB_MAX_OUTPUT_PORT_TYPE
score[7] <= numberOfMoves[7].DB_MAX_OUTPUT_PORT_TYPE
score[8] <= numberOfMoves[8].DB_MAX_OUTPUT_PORT_TYPE
score[9] <= numberOfMoves[9].DB_MAX_OUTPUT_PORT_TYPE
drawBox <= positionControl:POSCTRL.drawBox
eraseBox <= positionControl:POSCTRL.eraseBox
drawMaze <= positionControl:POSCTRL.drawMaze
gameWon <= gameWon.DB_MAX_OUTPUT_PORT_TYPE
gameLost <= legalControl:LEGALCTRL.gameLost
gameOver <= legalControl:LEGALCTRL.backToStart
hard => hard.IN1
med => med.IN1
easy => easy.IN1
playHard <= gameDifficulty:DIFFICULTY.playHard
playMedium <= gameDifficulty:DIFFICULTY.playMedium
playEasy <= gameDifficulty:DIFFICULTY.playEasy
externalReset <= externalReset.DB_MAX_OUTPUT_PORT_TYPE


|handshake|gameDifficulty:DIFFICULTY
hard => nextState.HARD.DATAB
hard => nextState.IN0
hard => Selector1.IN1
med => nextState.MEDIUM.DATAB
med => nextState.IN1
med => Selector1.IN2
easy => nextState.EASY.DATAB
easy => nextState.IN1
easy => Selector1.IN3
clock => currentState~1.DATAIN
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
playHard <= playHard.DB_MAX_OUTPUT_PORT_TYPE
playMedium <= playMedium.DB_MAX_OUTPUT_PORT_TYPE
playEasy <= playEasy.DB_MAX_OUTPUT_PORT_TYPE
externalReset <= externalReset.DB_MAX_OUTPUT_PORT_TYPE


|handshake|positionControl:POSCTRL
clock => currentState~1.DATAIN
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
received_data_en => Selector1.IN1
received_data_en => Selector0.IN1
received_data_en => Selector2.IN1
received_data[0] => Decoder0.IN7
received_data[1] => Decoder0.IN6
received_data[2] => Decoder0.IN5
received_data[3] => Decoder0.IN4
received_data[4] => Decoder0.IN3
received_data[5] => Decoder0.IN2
received_data[6] => Decoder0.IN1
received_data[7] => Decoder0.IN0
doneCheckLegal => nextState.MODIFICATIONS.DATAB
doneCheckLegal => Selector3.IN1
isLegal => nextState.CHANGE_CURRENT.DATAB
isLegal => nextState.DONT_CHANGE_CURRENT.DATAB
doneMaze => Selector0.IN3
doneMaze => nextState.DRAW_MAZE.DATAB
doneDraw => Selector0.IN4
doneDraw => Selector4.IN2
doneErase => Selector3.IN3
doneErase => Selector2.IN2
moveUp <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
moveDown <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
moveLeft <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
moveRight <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
drawBox <= drawBox.DB_MAX_OUTPUT_PORT_TYPE
eraseBox <= eraseBox.DB_MAX_OUTPUT_PORT_TYPE
drawMaze <= drawMaze.DB_MAX_OUTPUT_PORT_TYPE
doneChangePosition <= doneChangePosition.DB_MAX_OUTPUT_PORT_TYPE


|handshake|positionDatapath:POSDATA
clock => newY[0]~reg0.CLK
clock => newY[1]~reg0.CLK
clock => newY[2]~reg0.CLK
clock => newY[3]~reg0.CLK
clock => newY[4]~reg0.CLK
clock => newX[0]~reg0.CLK
clock => newX[1]~reg0.CLK
clock => newX[2]~reg0.CLK
clock => newX[3]~reg0.CLK
clock => newX[4]~reg0.CLK
clock => prevY[0]~reg0.CLK
clock => prevY[1]~reg0.CLK
clock => prevY[2]~reg0.CLK
clock => prevY[3]~reg0.CLK
clock => prevY[4]~reg0.CLK
clock => prevX[0]~reg0.CLK
clock => prevX[1]~reg0.CLK
clock => prevX[2]~reg0.CLK
clock => prevX[3]~reg0.CLK
clock => prevX[4]~reg0.CLK
clock => tempCurrentY[0]~reg0.CLK
clock => tempCurrentY[1]~reg0.CLK
clock => tempCurrentY[2]~reg0.CLK
clock => tempCurrentY[3]~reg0.CLK
clock => tempCurrentY[4]~reg0.CLK
clock => tempCurrentX[0]~reg0.CLK
clock => tempCurrentX[1]~reg0.CLK
clock => tempCurrentX[2]~reg0.CLK
clock => tempCurrentX[3]~reg0.CLK
clock => tempCurrentX[4]~reg0.CLK
resetn => doneOncep1[0].ACLR
resetn => doneOnce[0].ACLR
resetn => numberOfMoves[0]~reg0.ACLR
resetn => numberOfMoves[1]~reg0.ACLR
resetn => numberOfMoves[2]~reg0.ACLR
resetn => numberOfMoves[3]~reg0.ACLR
resetn => numberOfMoves[4]~reg0.ACLR
resetn => numberOfMoves[5]~reg0.ACLR
resetn => numberOfMoves[6]~reg0.ACLR
resetn => numberOfMoves[7]~reg0.ACLR
resetn => numberOfMoves[8]~reg0.ACLR
resetn => numberOfMoves[9]~reg0.ACLR
resetn => changedY[0]~reg0.ACLR
resetn => changedY[1]~reg0.ACLR
resetn => changedY[2]~reg0.ACLR
resetn => changedY[3]~reg0.ACLR
resetn => changedY[4]~reg0.ACLR
resetn => changedX[0]~reg0.PRESET
resetn => changedX[1]~reg0.ACLR
resetn => changedX[2]~reg0.ACLR
resetn => changedX[3]~reg0.ACLR
resetn => changedX[4]~reg0.ACLR
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => prevX.OUTPUTSELECT
resetn => prevX.OUTPUTSELECT
resetn => prevX.OUTPUTSELECT
resetn => prevX.OUTPUTSELECT
resetn => prevX.OUTPUTSELECT
resetn => prevY.OUTPUTSELECT
resetn => prevY.OUTPUTSELECT
resetn => prevY.OUTPUTSELECT
resetn => prevY.OUTPUTSELECT
resetn => prevY.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
received_data_en => doneOncep1[0].CLK
received_data_en => doneOnce[0].CLK
received_data_en => numberOfMoves[0]~reg0.CLK
received_data_en => numberOfMoves[1]~reg0.CLK
received_data_en => numberOfMoves[2]~reg0.CLK
received_data_en => numberOfMoves[3]~reg0.CLK
received_data_en => numberOfMoves[4]~reg0.CLK
received_data_en => numberOfMoves[5]~reg0.CLK
received_data_en => numberOfMoves[6]~reg0.CLK
received_data_en => numberOfMoves[7]~reg0.CLK
received_data_en => numberOfMoves[8]~reg0.CLK
received_data_en => numberOfMoves[9]~reg0.CLK
received_data_en => changedY[0]~reg0.CLK
received_data_en => changedY[1]~reg0.CLK
received_data_en => changedY[2]~reg0.CLK
received_data_en => changedY[3]~reg0.CLK
received_data_en => changedY[4]~reg0.CLK
received_data_en => changedX[0]~reg0.CLK
received_data_en => changedX[1]~reg0.CLK
received_data_en => changedX[2]~reg0.CLK
received_data_en => changedX[3]~reg0.CLK
received_data_en => changedX[4]~reg0.CLK
currentX[0] => tempCurrentX.DATAB
currentX[0] => prevX.DATAB
currentX[1] => tempCurrentX.DATAB
currentX[1] => prevX.DATAB
currentX[2] => tempCurrentX.DATAB
currentX[2] => prevX.DATAB
currentX[3] => tempCurrentX.DATAB
currentX[3] => prevX.DATAB
currentX[4] => tempCurrentX.DATAB
currentX[4] => prevX.DATAB
currentY[0] => tempCurrentY.DATAB
currentY[0] => prevY.DATAB
currentY[1] => tempCurrentY.DATAB
currentY[1] => prevY.DATAB
currentY[2] => tempCurrentY.DATAB
currentY[2] => prevY.DATAB
currentY[3] => tempCurrentY.DATAB
currentY[3] => prevY.DATAB
currentY[4] => tempCurrentY.DATAB
currentY[4] => prevY.DATAB
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveLeft => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveRight => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveUp => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
moveDown => numberOfMoves.OUTPUTSELECT
doneLegal => always2.IN0
doneLegal => always2.IN0
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
gameOver => always1.IN0
gameOver => always2.IN1
gameOver => always2.IN1
forceReset => always1.IN1
forceReset => newX.OUTPUTSELECT
forceReset => newX.OUTPUTSELECT
forceReset => newX.OUTPUTSELECT
forceReset => newX.OUTPUTSELECT
forceReset => newX.OUTPUTSELECT
forceReset => newY.OUTPUTSELECT
forceReset => newY.OUTPUTSELECT
forceReset => newY.OUTPUTSELECT
forceReset => newY.OUTPUTSELECT
forceReset => newY.OUTPUTSELECT
scorePlusFive => changedX.OUTPUTSELECT
scorePlusFive => changedX.OUTPUTSELECT
scorePlusFive => changedX.OUTPUTSELECT
scorePlusFive => changedX.OUTPUTSELECT
scorePlusFive => changedX.OUTPUTSELECT
scorePlusFive => changedY.OUTPUTSELECT
scorePlusFive => changedY.OUTPUTSELECT
scorePlusFive => changedY.OUTPUTSELECT
scorePlusFive => changedY.OUTPUTSELECT
scorePlusFive => changedY.OUTPUTSELECT
scorePlusFive => numberOfMoves.OUTPUTSELECT
scorePlusFive => numberOfMoves.OUTPUTSELECT
scorePlusFive => numberOfMoves.OUTPUTSELECT
scorePlusFive => numberOfMoves.OUTPUTSELECT
scorePlusFive => numberOfMoves.OUTPUTSELECT
scorePlusFive => numberOfMoves.OUTPUTSELECT
scorePlusFive => numberOfMoves.OUTPUTSELECT
scorePlusFive => numberOfMoves.OUTPUTSELECT
scorePlusFive => numberOfMoves.OUTPUTSELECT
scorePlusFive => numberOfMoves.OUTPUTSELECT
scoreMinusFive => changedX.OUTPUTSELECT
scoreMinusFive => changedX.OUTPUTSELECT
scoreMinusFive => changedX.OUTPUTSELECT
scoreMinusFive => changedX.OUTPUTSELECT
scoreMinusFive => changedX.OUTPUTSELECT
scoreMinusFive => changedY.OUTPUTSELECT
scoreMinusFive => changedY.OUTPUTSELECT
scoreMinusFive => changedY.OUTPUTSELECT
scoreMinusFive => changedY.OUTPUTSELECT
scoreMinusFive => changedY.OUTPUTSELECT
scoreMinusFive => numberOfMoves.OUTPUTSELECT
scoreMinusFive => numberOfMoves.OUTPUTSELECT
scoreMinusFive => numberOfMoves.OUTPUTSELECT
scoreMinusFive => numberOfMoves.OUTPUTSELECT
scoreMinusFive => numberOfMoves.OUTPUTSELECT
scoreMinusFive => numberOfMoves.OUTPUTSELECT
scoreMinusFive => numberOfMoves.OUTPUTSELECT
scoreMinusFive => numberOfMoves.OUTPUTSELECT
scoreMinusFive => numberOfMoves.OUTPUTSELECT
scoreMinusFive => numberOfMoves.OUTPUTSELECT
tempCurrentX[0] <= tempCurrentX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[1] <= tempCurrentX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[2] <= tempCurrentX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[3] <= tempCurrentX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[4] <= tempCurrentX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[0] <= tempCurrentY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[1] <= tempCurrentY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[2] <= tempCurrentY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[3] <= tempCurrentY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[4] <= tempCurrentY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[0] <= changedX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[1] <= changedX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[2] <= changedX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[3] <= changedX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[4] <= changedX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[0] <= changedY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[1] <= changedY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[2] <= changedY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[3] <= changedY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[4] <= changedY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[0] <= newX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[1] <= newX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[2] <= newX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[3] <= newX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[4] <= newX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[0] <= newY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[1] <= newY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[2] <= newY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[3] <= newY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[4] <= newY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prevX[0] <= prevX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prevX[1] <= prevX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prevX[2] <= prevX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prevX[3] <= prevX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prevX[4] <= prevX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prevY[0] <= prevY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prevY[1] <= prevY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prevY[2] <= prevY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prevY[3] <= prevY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
prevY[4] <= prevY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
numberOfMoves[0] <= numberOfMoves[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
numberOfMoves[1] <= numberOfMoves[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
numberOfMoves[2] <= numberOfMoves[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
numberOfMoves[3] <= numberOfMoves[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
numberOfMoves[4] <= numberOfMoves[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
numberOfMoves[5] <= numberOfMoves[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
numberOfMoves[6] <= numberOfMoves[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
numberOfMoves[7] <= numberOfMoves[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
numberOfMoves[8] <= numberOfMoves[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
numberOfMoves[9] <= numberOfMoves[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|handshake|legalControl:LEGALCTRL
clock => backToStart~reg0.CLK
clock => scoreMinusFive~reg0.CLK
clock => scorePlusFive~reg0.CLK
clock => gameLost~reg0.CLK
clock => gameWon~reg0.CLK
clock => isLegal~reg0.CLK
clock => doneCheckLegal~reg0.CLK
clock => currentState~1.DATAIN
resetn => Selector1.IN3
resetn => Selector3.IN3
resetn => Selector2.IN2
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => Selector0.IN5
resetn => Selector0.IN6
resetn => Selector0.IN7
doneChangePosition => nextState.CHECK_MEMORY.DATAB
doneChangePosition => Selector0.IN2
valueInMemory[0] => Equal4.IN1
valueInMemory[0] => Equal5.IN3
valueInMemory[0] => Equal6.IN3
valueInMemory[0] => Equal7.IN1
valueInMemory[1] => Equal4.IN3
valueInMemory[1] => Equal5.IN1
valueInMemory[1] => Equal6.IN2
valueInMemory[1] => Equal7.IN0
valueInMemory[2] => Equal4.IN0
valueInMemory[2] => Equal5.IN0
valueInMemory[2] => Equal6.IN1
valueInMemory[2] => Equal7.IN3
x[0] => Equal0.IN4
x[0] => Equal1.IN3
x[1] => Equal0.IN3
x[1] => Equal1.IN2
x[2] => Equal0.IN2
x[2] => Equal1.IN1
x[3] => Equal0.IN1
x[3] => Equal1.IN4
x[4] => Equal0.IN0
x[4] => Equal1.IN0
y[0] => Equal2.IN4
y[0] => Equal3.IN3
y[1] => Equal2.IN3
y[1] => Equal3.IN2
y[2] => Equal2.IN2
y[2] => Equal3.IN1
y[3] => Equal2.IN1
y[3] => Equal3.IN4
y[4] => Equal2.IN0
y[4] => Equal3.IN0
moveLeft => always0.IN1
moveRight => always0.IN1
moveUp => always0.IN1
moveDown => always0.IN1
externalReset => nextState.OUTPUTSELECT
externalReset => nextState.OUTPUTSELECT
externalReset => nextState.OUTPUTSELECT
externalReset => nextState.OUTPUTSELECT
externalReset => nextState.OUTPUTSELECT
externalReset => Selector2.IN3
noMoreMoves => always0.IN0
noMoreTime => always0.IN1
doneCheckLegal <= doneCheckLegal~reg0.DB_MAX_OUTPUT_PORT_TYPE
isLegal <= isLegal~reg0.DB_MAX_OUTPUT_PORT_TYPE
gameWon <= gameWon~reg0.DB_MAX_OUTPUT_PORT_TYPE
gameLost <= gameLost~reg0.DB_MAX_OUTPUT_PORT_TYPE
backToStart <= backToStart~reg0.DB_MAX_OUTPUT_PORT_TYPE
scorePlusFive <= scorePlusFive~reg0.DB_MAX_OUTPUT_PORT_TYPE
scoreMinusFive <= scoreMinusFive~reg0.DB_MAX_OUTPUT_PORT_TYPE


|handshake|movesCounter:COUNTMOVES
clock => ~NO_FANOUT~
resetn => noMoreMoves.OUTPUTSELECT
numberOfMoves[0] => LessThan0.IN20
numberOfMoves[1] => LessThan0.IN19
numberOfMoves[2] => LessThan0.IN18
numberOfMoves[3] => LessThan0.IN17
numberOfMoves[4] => LessThan0.IN16
numberOfMoves[5] => LessThan0.IN15
numberOfMoves[6] => LessThan0.IN14
numberOfMoves[7] => LessThan0.IN13
numberOfMoves[8] => LessThan0.IN12
numberOfMoves[9] => LessThan0.IN11
noMoreMoves <= noMoreMoves.DB_MAX_OUTPUT_PORT_TYPE


|handshake|delay1Hz:ONESDELAY
clock => slowDown[0]~reg0.CLK
clock => slowDown[1]~reg0.CLK
clock => slowDown[2]~reg0.CLK
clock => slowDown[3]~reg0.CLK
clock => slowDown[4]~reg0.CLK
clock => slowDown[5]~reg0.CLK
clock => slowDown[6]~reg0.CLK
clock => slowDown[7]~reg0.CLK
clock => slowDown[8]~reg0.CLK
clock => slowDown[9]~reg0.CLK
clock => slowDown[10]~reg0.CLK
clock => slowDown[11]~reg0.CLK
clock => slowDown[12]~reg0.CLK
clock => slowDown[13]~reg0.CLK
clock => slowDown[14]~reg0.CLK
clock => slowDown[15]~reg0.CLK
clock => slowDown[16]~reg0.CLK
clock => slowDown[17]~reg0.CLK
clock => slowDown[18]~reg0.CLK
clock => slowDown[19]~reg0.CLK
clock => slowDown[20]~reg0.CLK
clock => slowDown[21]~reg0.CLK
clock => slowDown[22]~reg0.CLK
clock => slowDown[23]~reg0.CLK
clock => slowDown[24]~reg0.CLK
clock => slowDown[25]~reg0.CLK
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
resetn => slowDown.OUTPUTSELECT
slowDown[0] <= slowDown[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[1] <= slowDown[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[2] <= slowDown[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[3] <= slowDown[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[4] <= slowDown[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[5] <= slowDown[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[6] <= slowDown[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[7] <= slowDown[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[8] <= slowDown[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[9] <= slowDown[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[10] <= slowDown[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[11] <= slowDown[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[12] <= slowDown[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[13] <= slowDown[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[14] <= slowDown[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[15] <= slowDown[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[16] <= slowDown[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[17] <= slowDown[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[18] <= slowDown[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[19] <= slowDown[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[20] <= slowDown[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[21] <= slowDown[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[22] <= slowDown[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[23] <= slowDown[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[24] <= slowDown[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
slowDown[25] <= slowDown[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|handshake|gameDuration:TIMEELAPSED
go => timeElapsed.OUTPUTSELECT
go => timeElapsed.OUTPUTSELECT
go => timeElapsed.OUTPUTSELECT
go => timeElapsed.OUTPUTSELECT
go => timeElapsed.OUTPUTSELECT
go => timeElapsed.OUTPUTSELECT
go => timeElapsed.OUTPUTSELECT
clock => timeElapsed[0].CLK
clock => timeElapsed[1].CLK
clock => timeElapsed[2].CLK
clock => timeElapsed[3].CLK
clock => timeElapsed[4].CLK
clock => timeElapsed[5].CLK
clock => timeElapsed[6].CLK
resetn => timeElapsed.OUTPUTSELECT
resetn => timeElapsed.OUTPUTSELECT
resetn => timeElapsed.OUTPUTSELECT
resetn => timeElapsed.OUTPUTSELECT
resetn => timeElapsed.OUTPUTSELECT
resetn => timeElapsed.OUTPUTSELECT
resetn => timeElapsed.OUTPUTSELECT
timeUp <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


