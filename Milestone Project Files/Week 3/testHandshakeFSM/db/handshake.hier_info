|handshake
clock => clock.IN3
resetn => resetn.IN3
ps2_key_pressed => ps2_key_pressed.IN1
ps2_key_data[0] => ps2_key_data[0].IN1
ps2_key_data[1] => ps2_key_data[1].IN1
ps2_key_data[2] => ps2_key_data[2].IN1
ps2_key_data[3] => ps2_key_data[3].IN1
ps2_key_data[4] => ps2_key_data[4].IN1
ps2_key_data[5] => ps2_key_data[5].IN1
ps2_key_data[6] => ps2_key_data[6].IN1
ps2_key_data[7] => ps2_key_data[7].IN1
valueInMemory[0] => valueInMemory[0].IN1
valueInMemory[1] => valueInMemory[1].IN1
valueInMemory[2] => valueInMemory[2].IN1


|handshake|positionControl:POSCTRL
clock => currentState~1.DATAIN
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
received_data_en => Selector1.IN2
received_data_en => Selector0.IN1
received_data_en => Selector2.IN1
received_data[0] => Decoder0.IN7
received_data[1] => Decoder0.IN6
received_data[2] => Decoder0.IN5
received_data[3] => Decoder0.IN4
received_data[4] => Decoder0.IN3
received_data[5] => Decoder0.IN2
received_data[6] => Decoder0.IN1
received_data[7] => Decoder0.IN0
doneCheckLegal => nextState.MODIFICATIONS.DATAB
doneCheckLegal => Selector2.IN2
isLegal => Selector3.IN3
isLegal => Selector4.IN1
moveUp <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
moveDown <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
moveLeft <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
moveRight <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
doneChangePosition <= doneChangePosition.DB_MAX_OUTPUT_PORT_TYPE


|handshake|positionDatapath:POSDATA
clock => newY[0]~reg0.CLK
clock => newY[1]~reg0.CLK
clock => newY[2]~reg0.CLK
clock => newY[3]~reg0.CLK
clock => newY[4]~reg0.CLK
clock => newX[0]~reg0.CLK
clock => newX[1]~reg0.CLK
clock => newX[2]~reg0.CLK
clock => newX[3]~reg0.CLK
clock => newX[4]~reg0.CLK
clock => changedY[0]~reg0.CLK
clock => changedY[1]~reg0.CLK
clock => changedY[2]~reg0.CLK
clock => changedY[3]~reg0.CLK
clock => changedY[4]~reg0.CLK
clock => changedX[0]~reg0.CLK
clock => changedX[1]~reg0.CLK
clock => changedX[2]~reg0.CLK
clock => changedX[3]~reg0.CLK
clock => changedX[4]~reg0.CLK
clock => tempCurrentY[0]~reg0.CLK
clock => tempCurrentY[1]~reg0.CLK
clock => tempCurrentY[2]~reg0.CLK
clock => tempCurrentY[3]~reg0.CLK
clock => tempCurrentY[4]~reg0.CLK
clock => tempCurrentX[0]~reg0.CLK
clock => tempCurrentX[1]~reg0.CLK
clock => tempCurrentX[2]~reg0.CLK
clock => tempCurrentX[3]~reg0.CLK
clock => tempCurrentX[4]~reg0.CLK
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentX.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => tempCurrentY.OUTPUTSELECT
resetn => changedX.OUTPUTSELECT
resetn => changedX.OUTPUTSELECT
resetn => changedX.OUTPUTSELECT
resetn => changedX.OUTPUTSELECT
resetn => changedX.OUTPUTSELECT
resetn => changedY.OUTPUTSELECT
resetn => changedY.OUTPUTSELECT
resetn => changedY.OUTPUTSELECT
resetn => changedY.OUTPUTSELECT
resetn => changedY.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newX.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
resetn => newY.OUTPUTSELECT
currentX[0] => tempCurrentX.DATAB
currentX[1] => tempCurrentX.DATAB
currentX[2] => tempCurrentX.DATAB
currentX[3] => tempCurrentX.DATAB
currentX[4] => tempCurrentX.DATAB
currentY[0] => tempCurrentY.DATAB
currentY[1] => tempCurrentY.DATAB
currentY[2] => tempCurrentY.DATAB
currentY[3] => tempCurrentY.DATAB
currentY[4] => tempCurrentY.DATAB
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedX.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveLeft => changedY.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedX.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveRight => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedY.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveUp => changedX.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedY.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
moveDown => changedX.OUTPUTSELECT
doneLegal => always2.IN0
doneLegal => always2.IN0
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newX.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
isLegal => newY.OUTPUTSELECT
gameOver => always2.IN1
gameOver => always2.IN1
tempCurrentX[0] <= tempCurrentX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[1] <= tempCurrentX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[2] <= tempCurrentX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[3] <= tempCurrentX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentX[4] <= tempCurrentX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[0] <= tempCurrentY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[1] <= tempCurrentY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[2] <= tempCurrentY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[3] <= tempCurrentY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempCurrentY[4] <= tempCurrentY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[0] <= changedX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[1] <= changedX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[2] <= changedX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[3] <= changedX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedX[4] <= changedX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[0] <= changedY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[1] <= changedY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[2] <= changedY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[3] <= changedY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
changedY[4] <= changedY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[0] <= newX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[1] <= newX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[2] <= newX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[3] <= newX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newX[4] <= newX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[0] <= newY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[1] <= newY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[2] <= newY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[3] <= newY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
newY[4] <= newY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|handshake|legalControl:LEGALCTRL
clock => gameOver~reg0.CLK
clock => isLegal~reg0.CLK
clock => doneCheckLegal~reg0.CLK
clock => currentState~1.DATAIN
resetn => Selector0.IN4
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => currentState.OUTPUTSELECT
resetn => Selector1.IN3
doneChangePosition => nextState.CHECK_MEMORY.DATAB
doneChangePosition => Selector0.IN2
valueInMemory[0] => Equal4.IN3
valueInMemory[0] => Equal5.IN1
valueInMemory[1] => Equal4.IN2
valueInMemory[1] => Equal5.IN0
valueInMemory[2] => Equal4.IN1
valueInMemory[2] => Equal5.IN3
x[0] => Equal0.IN4
x[0] => Equal1.IN3
x[1] => Equal0.IN3
x[1] => Equal1.IN2
x[2] => Equal0.IN2
x[2] => Equal1.IN1
x[3] => Equal0.IN1
x[3] => Equal1.IN4
x[4] => Equal0.IN0
x[4] => Equal1.IN0
y[0] => Equal2.IN4
y[0] => Equal3.IN3
y[1] => Equal2.IN3
y[1] => Equal3.IN2
y[2] => Equal2.IN2
y[2] => Equal3.IN1
y[3] => Equal2.IN1
y[3] => Equal3.IN4
y[4] => Equal2.IN0
y[4] => Equal3.IN0
moveLeft => always0.IN1
moveRight => always0.IN1
moveUp => always0.IN1
moveDown => always0.IN1
doneCheckLegal <= doneCheckLegal~reg0.DB_MAX_OUTPUT_PORT_TYPE
isLegal <= isLegal~reg0.DB_MAX_OUTPUT_PORT_TYPE
gameOver <= gameOver~reg0.DB_MAX_OUTPUT_PORT_TYPE


