vendor_name = ModelSim
source_file = 1, C:/Users/hhalb/Desktop/ECE241/FinalProject/Week2/PS2KeyboardStuff/PS2_Controller.v
source_file = 1, C:/Users/hhalb/Desktop/ECE241/FinalProject/Week2/PS2KeyboardStuff/Altera_UP_PS2_Data_In.v
source_file = 1, C:/Users/hhalb/Desktop/ECE241/FinalProject/Week2/PS2KeyboardStuff/Altera_UP_PS2_Command_Out.v
source_file = 1, C:/Users/hhalb/Desktop/ECE241/FinalProject/Week2/FSMLegalMoves/legalMoves.v
source_file = 1, C:/Users/hhalb/Desktop/ECE241/FinalProject/Week2/FSMLegalMoves/db/legalMoves.cbx.xml
design_name = legalMoves
instance = comp, \doneCheckLegal~output , doneCheckLegal~output, legalMoves, 1
instance = comp, \isLegal~output , isLegal~output, legalMoves, 1
instance = comp, \gameOver~output , gameOver~output, legalMoves, 1
instance = comp, \clock~input , clock~input, legalMoves, 1
instance = comp, \clock~inputCLKENA0 , clock~inputCLKENA0, legalMoves, 1
instance = comp, \resetn~input , resetn~input, legalMoves, 1
instance = comp, \doneChangePosition~input , doneChangePosition~input, legalMoves, 1
instance = comp, \valueInMemory[1]~input , valueInMemory[1]~input, legalMoves, 1
instance = comp, \valueInMemory[0]~input , valueInMemory[0]~input, legalMoves, 1
instance = comp, \valueInMemory[2]~input , valueInMemory[2]~input, legalMoves, 1
instance = comp, \x[3]~input , x[3]~input, legalMoves, 1
instance = comp, \x[5]~input , x[5]~input, legalMoves, 1
instance = comp, \always0~0 , always0~0, legalMoves, 1
instance = comp, \y[1]~input , y[1]~input, legalMoves, 1
instance = comp, \y[4]~input , y[4]~input, legalMoves, 1
instance = comp, \moveDown~input , moveDown~input, legalMoves, 1
instance = comp, \y[3]~input , y[3]~input, legalMoves, 1
instance = comp, \y[0]~input , y[0]~input, legalMoves, 1
instance = comp, \y[2]~input , y[2]~input, legalMoves, 1
instance = comp, \always0~2 , always0~2, legalMoves, 1
instance = comp, \x[2]~input , x[2]~input, legalMoves, 1
instance = comp, \x[1]~input , x[1]~input, legalMoves, 1
instance = comp, \x[4]~input , x[4]~input, legalMoves, 1
instance = comp, \x[0]~input , x[0]~input, legalMoves, 1
instance = comp, \moveRight~input , moveRight~input, legalMoves, 1
instance = comp, \always0~4 , always0~4, legalMoves, 1
instance = comp, \moveLeft~input , moveLeft~input, legalMoves, 1
instance = comp, \always0~3 , always0~3, legalMoves, 1
instance = comp, \moveUp~input , moveUp~input, legalMoves, 1
instance = comp, \always0~1 , always0~1, legalMoves, 1
instance = comp, \Equal4~0 , Equal4~0, legalMoves, 1
instance = comp, \currentState~13 , currentState~13, legalMoves, 1
instance = comp, \currentState~14 , currentState~14, legalMoves, 1
instance = comp, \currentState.LEGAL , currentState.LEGAL, legalMoves, 1
instance = comp, \currentState~15 , currentState~15, legalMoves, 1
instance = comp, \currentState.NOT_LEGAL , currentState.NOT_LEGAL, legalMoves, 1
instance = comp, \currentState~12 , currentState~12, legalMoves, 1
instance = comp, \currentState.WON , currentState.WON, legalMoves, 1
instance = comp, \currentState~9 , currentState~9, legalMoves, 1
instance = comp, \currentState~10 , currentState~10, legalMoves, 1
instance = comp, \currentState.IDLE , currentState.IDLE, legalMoves, 1
instance = comp, \currentState~11 , currentState~11, legalMoves, 1
instance = comp, \currentState.CHECK_MEMORY , currentState.CHECK_MEMORY, legalMoves, 1
instance = comp, \doneCheckLegal~0 , doneCheckLegal~0, legalMoves, 1
instance = comp, \doneCheckLegal~reg0 , doneCheckLegal~reg0, legalMoves, 1
instance = comp, \isLegal~0 , isLegal~0, legalMoves, 1
instance = comp, \isLegal~reg0 , isLegal~reg0, legalMoves, 1
instance = comp, \gameOver~reg0 , gameOver~reg0, legalMoves, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, legalMoves, 1
